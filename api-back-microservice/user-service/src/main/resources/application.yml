spring:
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    store-type: redis
    # 30 天过期
    timeout: 2592000
  # Redis 配置
  redis:
    host: ${xf.redis.host}
    port: 6379
    password: ${xf.redis.password}
    database: 1
  cloud:
    nacos:
      server-addr: ${xf.nacos.addr}
  # 数据库配置
  # todo 需替换配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${xf.db.host}:${xf.db.port}/${xf.db.database}?useSSL=false&allowPublicKeyRetrieval=true
    username: ${xf.db.username}
    password: ${xf.db.password}
  rabbitmq:
    host: ${xf.rabbit.host}
    port: 5672
    username: ${xf.rabbit.username}
    password: ${xf.rabbit.password}
    virtual-host: ${xf.rabbit.vhost}
    # 以下为发送消息到mq时，由于连接问题而重试的配置
    connection-timeout: 200ms # 连接超时时间
    template:
      retry:
        enabled: true
        initial-interval: 1000ms # 失败后的初始等待时间
        multiplier: 1 # 失败后下次等待时长倍数
        max-attempts: 3
    listener: # 消费者的确认机制 会根据异常返回nack  还是reject
      simple:
        acknowledge-mode: auto
        prefetch: 1 # 消息预取，每次处理完1条再取下一条
        retry:
          enabled: true # 开启消费者重试
          initial-interval: 1000ms
          multiplier: 1
          max-attempts: 1
          stateless: true # true为不保存事务状态  false为保存事务状态

server:
  address: 0.0.0.0
  port: 7531
  servlet:
    context-path: /api/user
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
        path: /api
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）

# 接口文档配置
knife4j:
  enable:
    true
  openapi:
    title: "接口信息管理接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.xiaofan.user.controller
dubbo:
  application:
    name: dubbo-springboot-demo-provider
  registry:
    address: nacos://${xf.dubbo.address}?username=${xf.nacos.username}&password=${xf.nacos.password}
  protocol:
    port: 20881
ali:
  sms:
    accessKeyId: ${xf.sms.accessKeyId}
    accessKeySecret: ${xf.sms.accessKeySecret}
    signName: ${xf.sms.signName}
    verifyCodeTemplate: ${xf.sms.verifyCodeTemplate}